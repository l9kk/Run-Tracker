name: Quality Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: runtracker_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint Frontend
      run: npm run --workspace=frontend lint
    
    - name: Lint Backend  
      run: npm run --workspace=backend lint
    
    - name: Setup Test Database
      env:
        DATABASE_URL: ${{ secrets.TEST_DATABASE_URL || 'postgresql://postgres:postgres@localhost:5432/runtracker_test' }}
        JWT_SECRET: 'test-jwt-secret'
        GEOCODE_USER_AGENT: "run-tracker-test/1.0"
      run: |
        cd apps/backend
        npx prisma generate
        npx prisma migrate deploy
        npx prisma db seed
    
    - name: Run Backend Tests
      env:
        DATABASE_URL: ${{ secrets.TEST_DATABASE_URL || 'postgresql://postgres:postgres@localhost:5432/runtracker_test' }}
        JWT_SECRET: 'test-jwt-secret'
        NODE_ENV: test
        GEOCODE_USER_AGENT: "run-tracker-test/1.0"
      run: npm run --workspace=backend test
    
    - name: Build Frontend (Test)
      env:
        NEXT_PUBLIC_API_URL: http://localhost:3001
        NEXT_PUBLIC_NOMINATIM_BASE_URL: https://nominatim.openstreetmap.org
        NEXT_PUBLIC_GEOCODE_USER_AGENT: "run-tracker-test/1.0"
      run: npm run --workspace=frontend build
    
    - name: Build Backend (Test)
      run: npm run --workspace=backend build

    - name: Quality Check Summary
      run: |
        echo "All quality checks passed!"
        echo "Frontend: Linting and build successful"
        echo "Backend: Linting, testing, and build successful"
